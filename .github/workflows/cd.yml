name: Build and Push Container Image
permissions:
  contents: read
  packages: write

on:
  push:
    branches:
      - main
      - dev
    paths:
      - "src/"
      - "Dockerfile"
      - ".github/workflows/cd.yml"
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment:
      name: "${{ github.ref == 'refs/heads/main' && 'ui-prod' || 'ui-staging' }}"
    env:
      VITE_BACKEND_ENDPOINT: ${{ secrets.VITE_BACKEND_ENDPOINT }}
      VITE_AUTH0_DOMAIN: ${{ secrets.VITE_AUTH0_DOMAIN }}
      VITE_AUTH0_CLIENT_ID: ${{ secrets.VITE_AUTH0_CLIENT_ID }}
      VITE_AUTH0_AUDIENCE: ${{ secrets.VITE_AUTH0_AUDIENCE }}
      VITE_AUTH0_REDIRECT_URI: ${{ secrets.VITE_AUTH0_REDIRECT_URI }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-ui

      - name: Build and push image
        uses: docker/build-push-action@v6
        with:
          context: odometer/ui
          file: odometer/ui/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VITE_BACKEND_ENDPOINT=${{ env.VITE_BACKEND_ENDPOINT }}
            VITE_AUTH0_DOMAIN=${{ env.VITE_AUTH0_DOMAIN }}
            VITE_AUTH0_CLIENT_ID=${{ env.VITE_AUTH0_CLIENT_ID }}
            VITE_AUTH0_AUDIENCE=${{ env.VITE_AUTH0_AUDIENCE }}
            VITE_AUTH0_REDIRECT_URI=${{ env.VITE_AUTH0_REDIRECT_URI }}
